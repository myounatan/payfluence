"use client";

import "@repo/ui/globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { usePathname } from "next/navigation"

import * as dotenv from 'dotenv';
dotenv.config();

import { QueryClient, QueryClientProvider } from '@tanstack/react-query'
import { WagmiProvider } from 'wagmi'
import { WalletContextProvider } from "@/app/context/WalletContext";

import {
  DynamicContextProvider,
} from "@dynamic-labs/sdk-react-core";
import { EthereumWalletConnectors } from "@dynamic-labs/ethereum";

import { wagmiConfig } from '@/config/web3';
import SidebarNav from "@/components/SidebarNav";
import HeaderNav from "@/components/HeaderNav";
import { Toaster } from "@ui/components/ui/toaster"


const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Docs",
//   description: "Generated by create turbo",
// };

const dynamicContextLocale = {
  en: {
    dyn_login: {
      title: {
        all: "",
      },
    },
  },
};

const queryClient = new QueryClient()

const SKIP_LAYOUT_PAGES = ["/login", "/"];

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}): JSX.Element {

  const pathname = usePathname() || "/";

  return (
    <html lang="en">
      <body className={inter.className}>

        <WagmiProvider config={wagmiConfig}>
          <QueryClientProvider client={queryClient}> 
            <WalletContextProvider>
          
              <DynamicContextProvider
                locale={dynamicContextLocale}
                settings={{
                  // Find your environment id at https://app.dynamic.xyz/dashboard/developer
                  environmentId: process.env.NEXT_PUBLIC_DYNAMIC_ENVIRONMENT_ID || "sandbox",
                  walletConnectors: [EthereumWalletConnectors],
                }}
              >
                {SKIP_LAYOUT_PAGES.includes(pathname) ? (
                  <>
                    {children}
                    <Toaster />
                  </>
                ) : (
                  <div className="grid min-h-screen w-full grid-cols-[220px_1fr] lg:grid-cols-[220px_1fr] bg-slate-100">

                    <SidebarNav />

                    <div className="flex flex-col sm:gap-4 sm:py-4">
                      <HeaderNav breadcrumbLinks={[]} />
                      {children}
                      <Toaster />
                    </div>
                    
                  </div>
                )}
              </DynamicContextProvider>

            </WalletContextProvider>
          </QueryClientProvider> 
        </WagmiProvider>
      </body>
    </html>
  );
}
